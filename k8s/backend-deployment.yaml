apiVersion: apps/v1
kind: Deployment
metadata:
  name: navlambda-backend
  namespace: navlambda-studio
  labels:
    app: navlambda-backend
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: navlambda-backend
  template:
    metadata:
      labels:
        app: navlambda-backend
        component: backend
    spec:
      containers:
      - name: navlambda-backend
        image: navlambda/backend:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: navlambda-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: navlambda-secrets
              key: redis-url
        - name: KAFKA_BROKERS
          value: "navlambda-kafka:9092"
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
            nvidia.com/gpu: 1
          limits:
            cpu: 2000m
            memory: 4Gi
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: data-storage
          mountPath: /app/data
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: models-pvc
      - name: data-storage
        persistentVolumeClaim:
          claimName: data-pvc
      nodeSelector:
        accelerator: nvidia-tesla-k80
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"